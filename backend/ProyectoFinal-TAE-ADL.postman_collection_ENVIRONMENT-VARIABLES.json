{
	"info": {
		"_postman_id": "a6cf14fe-c5b7-4382-8140-3845b621b9c1",
		"name": "ProyectoFinal-TAE-ADL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34583592"
	},
	"item": [
		{
			"name": "TestLoginSuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Login successful - returns server state 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Login successful - responseData must say authentication was allowed\", () => {\r",
							"    pm.expect(responseData.user.name).to.eql(\"Tester 2\");\r",
							"    pm.environment.set(\"accessToken\", responseData.access_token);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{pw}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "TestLoginUnauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Login Rejected - Test returns server state 401: Unauthorized access\", () => {\r",
							"    pm.response.to.have.status(401);\r",
							"})\r",
							"\r",
							"pm.test(\"Login Rejected - responseData must say authentication was unauthorized\", () => {\r",
							"    pm.expect(responseData.message).to.eql(\"Las credenciales proporcionadas son incorrectas.\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"Aloalo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GeneralClientsQuery",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Query completed successfully - returns server state 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Query completed successfully - response body returns user data\", () => {\r",
							"    pm.expect(pm.response.text().length).to.not.be.eql(0);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/clients",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "VerifyNewClientRegistry",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Client Registry Successful - Returns server state 201: created\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"\r",
							"pm.test(\"Client Registry Successful - Response body contains new client credentials\", () => {\r",
							"    pm.expect(responseData).to.have.property(\"email\");\r",
							"    pm.expect(responseData).to.have.property(\"name\");\r",
							"    pm.expect(responseData).to.have.property(\"updated_at\");\r",
							"    pm.expect(responseData).to.have.property(\"created_at\");\r",
							"    pm.expect(responseData).to.have.property(\"id\");\r",
							"    pm.environment.set(\"id\", responseData.id);\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{signUpEmail}}\",\r\n    \"password\": \"{{signUpPW}}\",\r\n    \"name\": \"Matías Garín\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/clients",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateClientInfo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Client Information Updated Successfully - Returns server state 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Response body returns new client info\", () => {\r",
							"    pm.expect(responseData.name).to.be.eql(\"John Doe\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John Doe\",\r\n    \"email\": \"johndoe@outlook.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/clients/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"clients",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteClient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Client Deleted Successfully - Returns server state 204: No content\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"})\r",
							"\r",
							"pm.test(\"Client Deletion returns no response body\", () => {\r",
							"    pm.expect(pm.response.text().length).to.be.eql(0);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/clients/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"clients",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}